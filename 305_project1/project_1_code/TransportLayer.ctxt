#BlueJ class context
comment0.target=TransportLayer
comment0.text=\n\ This\ TransportLayer\ class\ simulates\ a\ Transport\ Layer\n\ it\ receives\ message\ from\ the\ application\ layer\ and\ sends\ it\ to\ the\ network\ layer\ with\ an\ additional\ TransportLayer\ header\n\ it\ also\ receives\ message\ from\ the\ network\ layer\ and\ sends\ it\ to\ the\ application\ layer\ after\ decoding\ the\ TransportLayer\ header\n
comment1.params=server\ transmission_delay\ propogation_delay
comment1.target=TransportLayer(boolean,\ double,\ long)
comment1.text=\n\ server\ is\ true\ if\ the\ application\ is\ a\ server\ (should\ listen)\ or\ false\ if\ it\ is\ a\ client\ (should\ try\ and\ connect)\n\ @param\ transmission_delay\ sets\ the\ \#\ of\ seconds\ of\ transmission_delay\ for\ each\ byte\n\ @param\ propogation_delay\ sets\ the\ \#\ of\ seconds\ of\ propogation_delay\ for\ each\ packet\n
comment10.params=
comment10.target=int\ getAck()
comment10.text=\n\ Method\ getAck\n\ @return\ The\ return\ value\ the\ acknowledge\ number\ of\ this\ transport\ layer\n
comment11.params=x
comment11.target=void\ setAck(int)
comment2.params=
comment2.target=void\ set_experiment()
comment2.text=\n\ Set\ the\ transport\ layer\ into\ experiment\ mode\n
comment3.params=server
comment3.target=TransportLayer(boolean)
comment3.text=\n\ TransportLayer\ Constructor\n\n\ server\ is\ true\ if\ the\ application\ is\ a\ server\ (should\ listen)\ or\ false\ \n\ if\ it\ is\ a\ client\ (should\ try\ and\ connect)@param\ server\ A\ parameter\n
comment4.params=transmission_delay
comment4.target=void\ set_transmission_delay(double)
comment4.text=\n\ Method\ set_transmission_delay\n\n\ @param\ transmission_delay\ A\ parameter\ represents\ the\ \#\ of\ second\ delay\ for\ each\ byte\n
comment5.params=propogation_delay
comment5.target=void\ set_propogation_delay(long)
comment5.text=\n\ Method\ set_propogation_delay\n\n\ @param\ propogation_delay\ A\ parameter\ represents\ the\ \#\ of\ seconds\ delay\ for\ each\ packet\n
comment6.params=payload
comment6.target=double\ send(byte[])
comment6.text=\n\ Method\ send\n\ sends\ a\ transport\ layer\ datagram\ with\ the\ given\ payload\ with\ additional\ transport\ layer\ header\n\ @param\ payload\ A\ parameter\ represents\ the\ data\ given\ by\ the\ application\ layer\n\ @return\ The\ return\ value\ represents\ the\ time\ it\ takes\ for\ the\ packet\ to\ arrive\ to\ the\ other\ side\n
comment7.params=
comment7.target=byte[]\ receive()
comment7.text=\n\ Method\ receive\n\ Receives\ a\ packet\ from\ the\ network\ layer\n\ deals\ with\ the\ different\ header\ information\ accordingly\n\ gives\ the\ application\ layer\ the\ data\ received\ from\ the\ other\ side\n\ @return\ The\ return\ value\ represents\ the\ data\ received\ from\ the\ other\ side\n
comment8.params=experiment
comment8.target=double\ handShake_1(boolean)
comment8.text=\n\ Method\ handShake_1\n\ The\ first\ step\ for\ a\ TCP\ connection\ \n\ @param\ experiment\ A\ parameter\ tells\ the\ server\ whether\ the\ client\ is\ doing\ an\ experiment\n\ @return\ The\ return\ value\ represents\ the\ time\ it\ toke\ to\ send\ this\ message\n
comment9.params=ack
comment9.target=double\ handShake_2(int)
comment9.text=\n\ Method\ handShake_2\n\ The\ second\ step\ for\ a\ TCP\ connection,\ acknowledging\ the\ request\ from\ the\ client\ \n\ @param\ ack\ A\ parameter\ represents\ the\ sequence\ number\ of\ next\ bit\ server\ is\ expecting\n\ @return\ The\ return\ value\ represents\ the\ time\ it\ toke\ to\ send\ this\ message\n
numComments=12
